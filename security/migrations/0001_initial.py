# Generated by Django 5.1.2 on 2025-05-19 00:44

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UtilisateurPersonnalise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('ADMIN', 'Administrateur'), ('MANAGER', 'Manager'), ('CAISSIER', 'Caissier'), ('VENDEUR', 'Vendeur'), ('STOCK', 'Gestionnaire de Stock')], default='ADMIN', max_length=20)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
                'permissions': [('acces_dashboard', 'Accès au tableau de bord'), ('gerer_utilisateurs', 'Peut gérer les utilisateurs'), ('voir_statistiques', 'Peut voir les statistiques'), ('gerer_stock', 'Peut gérer le stock'), ('effectuer_vente', 'Peut effectuer des ventes'), ('view_client', 'Peut voir les clients'), ('add_client', 'Peut ajouter des clients'), ('change_client', 'Peut modifier des clients'), ('delete_client', 'Peut supprimer des clients'), ('view_produit', 'Peut voir les produits'), ('add_produit', 'Peut ajouter des produits'), ('change_produit', 'Peut modifier des produits'), ('delete_produit', 'Peut supprimer des produits'), ('view_categorie', 'Peut voir les catégories'), ('add_categorie', 'Peut ajouter des catégories'), ('change_categorie', 'Peut modifier des catégories'), ('delete_categorie', 'Peut supprimer des catégories'), ('view_commande', 'Peut voir les commandes'), ('add_commande', 'Peut créer des commandes'), ('change_commande', 'Peut modifier des commandes'), ('delete_commande', 'Peut annuler des commandes'), ('view_fournisseur', 'Peut voir les fournisseurs'), ('add_fournisseur', 'Peut ajouter des fournisseurs'), ('change_fournisseur', 'Peut modifier des fournisseurs'), ('delete_fournisseur', 'Peut supprimer des fournisseurs'), ('view_achat', 'Peut voir les achats'), ('add_achat', 'Peut enregistrer des achats'), ('change_achat', 'Peut modifier des achats'), ('delete_achat', 'Peut supprimer des achats'), ('view_inventaire', 'Peut voir les inventaires'), ('add_inventaire', 'Peut créer des inventaires'), ('change_inventaire', 'Peut modifier des inventaires'), ('confirm_inventaire', 'Peut confirmer des inventaires'), ('view_parametre', 'Peut voir les paramètres'), ('change_parametre', 'Peut modifier les paramètres'), ('view_rapport', 'Peut voir les rapports'), ('generate_rapport', 'Peut générer des rapports'), ('view_tresorerie', 'Peut voir la trésorerie'), ('manage_tresorerie', 'Peut gérer la trésorerie'), ('view_backup', 'Peut voir les sauvegardes'), ('create_backup', 'Peut créer des sauvegardes'), ('restore_backup', 'Peut restaurer des sauvegardes'), ('view_promotion', 'Peut voir les promotions'), ('add_promotion', 'Peut ajouter des promotions'), ('change_promotion', 'Peut modifier des promotions'), ('delete_promotion', 'Peut supprimer des promotions'), ('apply_promotion', 'Peut appliquer des promotions'), ('view_notification', 'Peut voir les notifications'), ('manage_notification', 'Peut gérer les notifications'), ('can_manage_promotions', 'Peut gérer les promotions')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='JournalActivite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('CONNEXION', 'Connexion'), ('DECONNEXION', 'Déconnexion'), ('CREATION', 'Création'), ('MODIFICATION', 'Modification'), ('SUPPRESSION', 'Suppression'), ('ACCES', 'Accès')], max_length=20)),
                ('details', models.TextField()),
                ('ip_address', models.GenericIPAddressField()),
                ('date_heure', models.DateTimeField(auto_now_add=True)),
                ('utilisateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Journal d'activité",
                'verbose_name_plural': "Journaux d'activité",
                'ordering': ['-date_heure'],
            },
        ),
        migrations.CreateModel(
            name='ProfilUtilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='profils/%Y/%m/%d/')),
                ('poste', models.CharField(default='', max_length=100)),
                ('date_embauche', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('utilisateur', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profil', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
