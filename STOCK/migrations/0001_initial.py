# Generated by Django 5.1.2 on 2025-07-10 00:25

import django.core.validators
import django.db.models.deletion
import django_countries.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('parametres', '0019_entreprise_taux_tva_defaut_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseConnaissance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(unique=True)),
                ('reponse', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ChatbotKnowledge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_pattern', models.CharField(max_length=255)),
                ('response_template', models.TextField()),
                ('query_type', models.CharField(choices=[('stock', 'Stock'), ('vente', 'Ventes'), ('client', 'Clients'), ('produit', 'Produits')], max_length=20)),
                ('required_permissions', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='media/')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('cree_par', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='categories_crees', to=settings.AUTH_USER_MODEL)),
                ('entreprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametres.entreprise')),
            ],
            options={
                'verbose_name': 'Catégorie',
                'verbose_name_plural': 'Catégories',
                'ordering': ['nom'],
                'unique_together': {('entreprise', 'nom')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('est_lu', models.BooleanField(default=False)),
                ('type', models.CharField(choices=[('stock', 'Stock faible'), ('commande', 'Nouvelle commande'), ('facture', 'Facture impayée')], max_length=50)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('destinataire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Parametre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_societe', models.CharField(max_length=100)),
                ('adresse', models.TextField()),
                ('telephone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/')),
                ('devise_principale', models.CharField(blank=True, default='USD', max_length=10, verbose_name='Devise principale')),
                ('taux_tva', models.DecimalField(decimal_places=2, default=16.0, max_digits=5)),
                ('openexchangerates_app_id', models.CharField(blank=True, help_text='05d712c4f2ec421b831c73ca25285688', max_length=255, null=True)),
                ('openexchangerates_base_devise', models.CharField(default='FC', help_text='Devise de base pour les taux OpenExchangeRates', max_length=10)),
                ('devises_acceptees', models.JSONField(default=list, help_text="Liste des devises acceptées (ex: ['USD', 'EUR', 'CDF'])")),
                ('taux_change_auto', models.BooleanField(default=False, help_text='Mettre à jour automatiquement les taux de change')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='parametre', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actif', models.BooleanField(default=True)),
                ('nom', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('prix_achat', models.DecimalField(decimal_places=2, max_digits=10)),
                ('prix_vente', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stock', models.IntegerField(default=0)),
                ('seuil_alerte', models.IntegerField(default=10)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='media/produits/')),
                ('code_barre', models.ImageField(blank=True, null=True, upload_to='media/barcodes/')),
                ('code_barre_numero', models.CharField(blank=True, editable=False, max_length=13, null=True)),
                ('taux_tva', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('libelle', models.CharField(blank=True, max_length=100)),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('categorie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='STOCK.categorie')),
                ('cree_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('entreprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='produits', to='parametres.entreprise')),
            ],
            options={
                'verbose_name': 'Produit',
                'verbose_name_plural': 'Produits',
                'unique_together': {('entreprise', 'nom')},
            },
        ),
        migrations.CreateModel(
            name='MouvementStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_mouvement', models.CharField(choices=[('entree', 'Entrée'), ('sortie', 'Sortie'), ('correction', 'Correction')], max_length=10)),
                ('quantite', models.PositiveIntegerField()),
                ('date_mouvement', models.DateTimeField(auto_now_add=True)),
                ('commentaire', models.TextField(blank=True, null=True)),
                ('entreprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametres.entreprise')),
                ('utilisateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='STOCK.produit')),
            ],
        ),
        migrations.CreateModel(
            name='InventairePhysique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_theorique', models.IntegerField()),
                ('stock_physique', models.IntegerField()),
                ('ecart', models.IntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('valide', models.BooleanField(default=False)),
                ('entreprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametres.entreprise')),
                ('utilisateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='STOCK.produit')),
            ],
        ),
        migrations.CreateModel(
            name='SuggestionReapprovisionnement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_suggestion', models.DateField(auto_now_add=True)),
                ('quantite_predite', models.PositiveIntegerField()),
                ('quantite_suggeree', models.PositiveIntegerField()),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='STOCK.produit')),
            ],
            options={
                'verbose_name': 'Suggestion de réapprovisionnement',
                'verbose_name_plural': 'Suggestions de réapprovisionnement',
                'ordering': ['-date_suggestion'],
            },
        ),
        migrations.CreateModel(
            name='TauxChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('devise_source', models.CharField(max_length=3)),
                ('devise_cible', models.CharField(max_length=3)),
                ('taux', models.DecimalField(decimal_places=6, max_digits=12)),
                ('date_mise_a_jour', models.DateTimeField(auto_now=True)),
                ('est_manuel', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Taux de change',
                'verbose_name_plural': 'Taux de change',
                'unique_together': {('devise_source', 'devise_cible')},
            },
        ),
        migrations.CreateModel(
            name='ChatbotConversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.TextField(verbose_name='Requête')),
                ('response', models.JSONField(verbose_name='Réponse')),
                ('metadata', models.JSONField(default=dict, verbose_name='Métadonnées techniques')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Horodatage')),
                ('entreprise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='parametres.entreprise')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chatbot_conversations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Conversation Chatbot',
                'verbose_name_plural': 'Conversations Chatbot',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user'], name='STOCK_chatb_user_id_ce2535_idx'), models.Index(fields=['entreprise'], name='STOCK_chatb_entrepr_34c81a_idx'), models.Index(fields=['timestamp'], name='STOCK_chatb_timesta_557497_idx')],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('type_client', models.CharField(choices=[('PART', 'Particulier'), ('ENT', 'Entreprise'), ('ADM', 'Administration'), ('REV', 'Revendeur')], default='PART', max_length=4, verbose_name='Type de client')),
                ('statut', models.CharField(choices=[('ACT', 'Actif'), ('INA', 'Inactif'), ('ATT', 'En attente'), ('BLO', 'Bloqué')], default='ACT', max_length=3, verbose_name='Statut')),
                ('code_client', models.CharField(blank=True, max_length=20, null=True, verbose_name='Code client')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom complet/Raison sociale')),
                ('telephone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Format de téléphone invalide', regex='^\\+?[\\d\\s-]{10,20}$')], verbose_name='Téléphone')),
                ('telephone_secondaire', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone secondaire')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, validators=[django.core.validators.EmailValidator()], verbose_name='Email')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Site web')),
                ('adresse', models.TextField(blank=True, null=True, verbose_name='Adresse complète')),
                ('ville', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ville')),
                ('code_postal', models.CharField(blank=True, max_length=20, null=True, verbose_name='Code postal')),
                ('pays', django_countries.fields.CountryField(blank=True, max_length=2, null=True, verbose_name='Pays')),
                ('limite_credit', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Limite de crédit')),
                ('delai_paiement', models.PositiveIntegerField(default=30, verbose_name='Délai de paiement (jours)')),
                ('taux_remise', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Taux de remise (%)')),
                ('numero_tva', models.CharField(blank=True, max_length=50, null=True, verbose_name='Numéro de TVA')),
                ('numero_fiscal', models.CharField(blank=True, max_length=50, null=True, verbose_name='Numéro fiscal')),
                ('exonere_tva', models.BooleanField(default=False, verbose_name='Exonéré de TVA')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes internes')),
                ('cree_le', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('modifie_le', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
                ('cree_par', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clients_crees', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('devise_preferee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='parametres.devise', verbose_name='Devise préférée')),
                ('entreprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clients', to='parametres.entreprise', verbose_name='Entreprise propriétaire')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'ordering': ['nom'],
                'constraints': [models.UniqueConstraint(condition=models.Q(('code_client__isnull', True), _negated=True), fields=('entreprise', 'code_client'), name='code_client_unique_par_entreprise'), models.UniqueConstraint(condition=models.Q(('email__isnull', False), models.Q(('email', ''), _negated=True)), fields=('entreprise', 'email'), name='email_unique_par_entreprise')],
            },
        ),
    ]
