{% extends 'base.html' %}
{% load static %}
{% load math_filters %}

{% block content %}
<div class="container-fluid py-3">
    <div class="row g-3">
        <!-- Partie gauche : Liste des produits -->
        <div class="col-lg-8">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-primary text-white">
                    <div class="d-flex justify-content-between align-items-center flex-wrap">
                        <h3 class="mb-0"><i class="bi bi-box-seam me-2"></i> Produits disponibles</h3>
                        <div class="d-flex flex-wrap gap-2 mt-2 mt-md-0">
                            <!-- Filtre par catégorie -->
                            <div class="dropdown">
                                <button class="btn btn-light dropdown-toggle" type="button" id="categoryFilter" data-bs-toggle="dropdown">
                                    <i class="bi bi-funnel me-1"></i> Catégories
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item category-filter" href="#" data-category="all">Toutes les catégories</a></li>
                                    {% for categorie in categories %}
                                    <li><a class="dropdown-item category-filter" href="#" data-category="{{ categorie.id }}">{{ categorie.nom }}</a></li>
                                    {% endfor %}
                                </ul>
                            </div>
                            
                            <!-- Champ de recherche -->
                            <div class="w-100 w-md-auto">
                                <input type="text" id="search-product" class="form-control" placeholder="Rechercher un produit...">
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="card-body p-3">
                    <div class="row row-cols-2 row-cols-md-3 row-cols-lg-4 g-3" id="products-grid">
                        {% for produit in produits %}
                        <div class="col product-item" data-category="{{ produit.categorie|default:'none' }}">
                            <div class="card product-card h-100" 
                                 data-id="{{ produit.id }}"
                                 data-name="{{ produit.libelle }}"
                                 data-price="{{ produit.prix_vente }}"
                                 data-price-converted="{{ produit.prix_converti }}"
                                 data-barcode="{{ produit.code_barre_numero }}"
                                 onclick="addProductToCart(this)">
                                {% if produit.photo %}
                                <img src="{{ produit.photo.url }}" class="card-img-top p-2" alt="{{ produit.libelle }}" style="height: 120px; object-fit: contain;">
                                {% else %}
                                <div class="text-center py-4 bg-light">
                                    <i class="bi bi-image text-muted" style="font-size: 3rem;"></i>
                                </div>
                                {% endif %}
                                <div class="card-body text-center">
                                    <h6 class="card-title mb-1">{{ produit.libelle }}</h6>
                                    <p class="card-text text-success fw-bold mb-1">
                                        {% if devise_affichee == devise_principale %}
                                            {{ produit.prix_vente|floatformat:0 }} {{ devise_principale }}
                                        {% else %}
                                            {{ produit.prix_converti|floatformat:2 }} {{ devise_affichee }}
                                            <br><small class="text-muted">({{ produit.prix_vente|floatformat:0 }} {{ devise_principale }})</small>
                                        {% endif %}
                                    </p>
                                    <small class="text-muted">Stock: {{ produit.stock }}</small>
                                </div>
                            </div>
                        </div>
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>

        <!-- Partie droite : Panier de vente -->
        <div class="col-lg-4">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h3 class="mb-0"><i class="bi bi-cart me-2"></i> Panier de vente</h3>
                    <div class="dropdown">
                        <button class="btn btn-sm btn-light dropdown-toggle" type="button" id="deviseDropdown" data-bs-toggle="dropdown">
                            Devise: {{ devise_affichee }}
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end">
                            {% for devise in devises_acceptees %}
                            <li>
                                <a class="dropdown-item" href="#" onclick="changeCurrency('{{ devise }}')">
                                    {{ devise }} - {{ devises_formatees|get_item:devise }}
                                </a>
                            </li>
                            {% endfor %}
                        </ul>
                    </div>
                </div>
                <div class="card-body p-0">
                    <form method="POST">
                        {% csrf_token %}
                        
                        <!-- Scanner code-barres -->
                        <div class="p-3 bg-light border-bottom">
                            <label class="form-label fw-bold"><i class="bi bi-upc-scan me-1"></i> Scanner un code-barres :</label>
                            <div class="input-group mb-2">
                                <input type="text" id="scan-input" class="form-control" placeholder="Scannez ou entrez le code-barres..." autofocus>
                                <button class="btn btn-outline-secondary" type="button" onclick="focusScanInput()">
                                    <i class="bi bi-upc-scan"></i>
                                </button>
                            </div>
                        </div>
                        
                        <!-- Liste des produits ajoutés -->
                        <div class="table-responsive" style="max-height: 300px; overflow-y: auto;">
                            <table class="table table-hover mb-0" id="cart-table">
                                <thead class="sticky-top bg-light">
                                    <tr>
                                        <th width="50%">Produit</th>
                                        <th width="25%">Prix</th>
                                        <th width="25%">Quantité</th>
                                    </tr>
                                </thead>
                                <tbody id="cart-body">
                                    <!-- Les produits ajoutés apparaîtront ici -->
                                </tbody>
                            </table>
                        </div>

                        <!-- Clavier numérique -->
                        <div class="p-3 border-top bg-light">
                            <div class="row g-2 mb-3">
                                <div class="col-4">
                                    <button type="button" class="btn btn-outline-secondary w-100 py-2" onclick="appendToQuantity('7')">7</button>
                                </div>
                                <div class="col-4">
                                    <button type="button" class="btn btn-outline-secondary w-100 py-2" onclick="appendToQuantity('8')">8</button>
                                </div>
                                <div class="col-4">
                                    <button type="button" class="btn btn-outline-secondary w-100 py-2" onclick="appendToQuantity('9')">9</button>
                                </div>
                                <div class="col-4">
                                    <button type="button" class="btn btn-outline-secondary w-100 py-2" onclick="appendToQuantity('4')">4</button>
                                </div>
                                <div class="col-4">
                                    <button type="button" class="btn btn-outline-secondary w-100 py-2" onclick="appendToQuantity('5')">5</button>
                                </div>
                                <div class="col-4">
                                    <button type="button" class="btn btn-outline-secondary w-100 py-2" onclick="appendToQuantity('6')">6</button>
                                </div>
                                <div class="col-4">
                                    <button type="button" class="btn btn-outline-secondary w-100 py-2" onclick="appendToQuantity('1')">1</button>
                                </div>
                                <div class="col-4">
                                    <button type="button" class="btn btn-outline-secondary w-100 py-2" onclick="appendToQuantity('2')">2</button>
                                </div>
                                <div class="col-4">
                                    <button type="button" class="btn btn-outline-secondary w-100 py-2" onclick="appendToQuantity('3')">3</button>
                                </div>
                                <div class="col-4">
                                    <button type="button" class="btn btn-outline-secondary w-100 py-2" onclick="appendToQuantity('0')">0</button>
                                </div>
                                <div class="col-4">
                                    <button type="button" class="btn btn-outline-secondary w-100 py-2" onclick="appendToQuantity('00')">00</button>
                                </div>
                                <div class="col-4">
                                    <button type="button" class="btn btn-outline-danger w-100 py-2" onclick="clearQuantity()">
                                        <i class="bi bi-backspace"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Total et options de paiement -->
                        <div class="p-3">
                            {% if devise_affichee != devise_principale %}
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span>Total ({{ devise_principale }}) :</span>
                                <span class="fw-bold" id="total-principal">0 {{ devise_principale }}</span>
                            </div>
                            {% endif %}
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h5 class="mb-0">Total ({{ devise_affichee }}) :</h5>
                                <h4 class="mb-0 text-primary fw-bold" id="total-display">
                                    0.00 {{ devise_affichee }}
                                </h4>
                            </div>
                            
                            {% if devise_affichee != devise_principale %}
                            <div class="alert alert-info py-1 mb-3 small">
                                <div>Taux de change : 1 {{ devise_principale }} = {{ taux_affiche|floatformat:2 }} {{ devise_affichee }}</div>
                                <div class="mt-1">1 {{ devise_affichee }} = {{ 1|div:taux_affiche|floatformat:2 }} {{ devise_principale }}</div>
                            </div>
                            {% endif %}
                            
                            <div class="mb-3">
                                <label class="form-label fw-bold">Mode de paiement :</label>
                                <select name="paiement" class="form-select">
                                    <option value="cash">💵 Espèces</option>
                                    <option value="cb">💳 Carte bancaire</option>
                                    <option value="30j">📅 30 jours</option>
                                </select>
                            </div>
                            
                            <div class="d-grid gap-2">
                                <button type="submit" class="btn btn-success btn-lg py-3">
                                    <i class="bi bi-check-circle me-2"></i> Valider la vente
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .product-card {
        cursor: pointer;
        transition: transform 0.2s, box-shadow 0.2s;
    }
    
    .product-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        border: 1px solid var(--primary-yellow);
    }
    
    #cart-table thead th {
        position: sticky;
        top: 0;
        background-color: #f8f9fa;
        z-index: 10;
    }
    
    .quantity-control {
        display: flex;
        align-items: center;
    }
    
    .quantity-control button {
        width: 30px;
        height: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0;
    }
    
    .quantity-control input {
        width: 50px;
        text-align: center;
        margin: 0 5px;
        font-weight: bold;
    }
    
    #search-product {
        background-color: rgba(255, 255, 255, 0.2);
        border-color: rgba(255, 255, 255, 0.3);
        color: white;
    }
    
    #search-product::placeholder {
        color: rgba(255, 255, 255, 0.6);
    }
    
    #search-product:focus {
        background-color: white;
        color: var(--bs-body-color);
    }
    
    .dropdown-menu {
        max-height: 300px;
        overflow-y: auto;
    }
    
    .text-muted {
        opacity: 0.7;
        font-size: 0.85em;
    }
    
    .small {
        font-size: 0.85rem;
    }
</style>

<script>
    // Variables globales
    let cartItems = [];
    let activeInput = null;
    const tauxChange = parseFloat('{{ taux_affiche }}');
    const devisePrincipale = '{{ devise_principale }}';
    const deviseAffichee = '{{ devise_affichee }}';
    
    // Initialisation
    document.addEventListener('DOMContentLoaded', function() {
        updateCartDisplay();
        
        // Recherche de produits
        document.getElementById('search-product').addEventListener('input', function(e) {
            filterProducts();
        });
        
        // Filtre par catégorie
        document.querySelectorAll('.category-filter').forEach(item => {
            item.addEventListener('click', function(e) {
                e.preventDefault();
                const category = this.dataset.category;
                filterProducts(category);
                
                document.getElementById('categoryFilter').textContent = 
                    category === 'all' ? 'Toutes les catégories' : this.textContent;
            });
        });
        
        // Détection du focus sur les inputs de quantité
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('quantity-input')) {
                activeInput = e.target;
            }
        });

        // Gestion du scan de code-barres
        document.getElementById('scan-input').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                const barcode = this.value.trim();
                if (!barcode) return;
                
                const productCards = document.querySelectorAll('.product-card');
                let productFound = false;
                
                productCards.forEach(card => {
                    if (card.dataset.barcode === barcode) {
                        addProductToCart(card);
                        productFound = true;
                    }
                });
                
                if (productFound) {
                    this.value = '';
                } else {
                    alert("Aucun produit trouvé avec ce code-barres");
                    this.value = '';
                }
            }
        });

        // Focus automatique sur le champ de scan
        document.getElementById('scan-input').focus();
    });
    
    // Filtrer les produits
    function filterProducts(category = 'all') {
        const searchTerm = document.getElementById('search-product').value.toLowerCase();
        
        document.querySelectorAll('.product-item').forEach(item => {
            const productName = item.querySelector('.product-card').dataset.name.toLowerCase();
            const productCategory = item.dataset.category;
            const matchesSearch = productName.includes(searchTerm);
            const matchesCategory = category === 'all' || productCategory === category;
            
            item.style.display = (matchesSearch && matchesCategory) ? 'block' : 'none';
        });
    }
    
    function focusScanInput() {
        const scanInput = document.getElementById('scan-input');
        scanInput.focus();
        scanInput.select();
    }
    
    // Ajout d'un produit au panier
    function addProductToCart(productCard) {
        const productId = productCard.dataset.id;
        const existingItem = cartItems.find(item => item.id === productId);
        
        if (existingItem) {
            existingItem.quantity += 1;
        } else {
            cartItems.push({
                id: productId,
                name: productCard.dataset.name,
                price: parseFloat(productCard.dataset.price),
                price_converted: parseFloat(productCard.dataset.priceConverted),
                barcode: productCard.dataset.barcode,
                quantity: 1
            });
        }
        
        updateCartDisplay();
        playAddToCartSound();
    }
    
    // Mise à jour de l'affichage du panier
    function updateCartDisplay() {
        const cartBody = document.getElementById('cart-body');
        const totalPrincipalElement = document.getElementById('total-principal');
        const totalDisplayElement = document.getElementById('total-display');
        let totalPrincipal = 0;
        let totalDisplay = 0;
        
        cartBody.innerHTML = '';
        
        cartItems.forEach((item, index) => {
            const itemTotalPrincipal = item.price * item.quantity;
            const itemTotalDisplay = deviseAffichee === devisePrincipale ? 
                itemTotalPrincipal : 
                (item.price_converted * item.quantity);
            
            totalPrincipal += itemTotalPrincipal;
            totalDisplay += itemTotalDisplay;
            
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${item.name}</td>
                <td>
                    ${deviseAffichee === devisePrincipale ? 
                      item.price.toFixed(0) + ' ' + devisePrincipale : 
                      item.price_converted.toFixed(2) + ' ' + deviseAffichee}
                    ${deviseAffichee !== devisePrincipale ? 
                      '<br><small class="text-muted">(' + item.price.toFixed(0) + ' ' + devisePrincipale + ')</small>' : ''}
                </td>
                <td>
                    <div class="quantity-control">
                        <button class="btn btn-sm btn-outline-secondary" onclick="updateQuantity(${index}, -1)">
                            <i class="bi bi-dash"></i>
                        </button>
                        <input type="number" class="form-control form-control-sm quantity-input" 
                               value="${item.quantity}" min="1" 
                               onchange="updateQuantityInput(${index}, this)"
                               onfocus="activeInput = this">
                        <button class="btn btn-sm btn-outline-secondary" onclick="updateQuantity(${index}, 1)">
                            <i class="bi bi-plus"></i>
                        </button>
                        <button class="btn btn-sm btn-outline-danger ms-2" onclick="removeFromCart(${index})">
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                </td>
                <input type="hidden" name="produit[]" value="${item.id}">
                <input type="hidden" name="quantite[]" value="${item.quantity}">
                <input type="hidden" name="prix[]" value="${deviseAffichee === devisePrincipale ? item.price : item.price_converted}">
            `;
            
            cartBody.appendChild(row);
        });
        
        // Mise à jour des totaux
        if (deviseAffichee !== devisePrincipale) {
            totalPrincipalElement.textContent = totalPrincipal.toFixed(0) + ' ' + devisePrincipale;
            totalPrincipalElement.parentElement.style.display = 'flex';
        } else if (totalPrincipalElement) {
            totalPrincipalElement.parentElement.style.display = 'none';
        }
        
        totalDisplayElement.textContent = totalDisplay.toFixed(2) + ' ' + deviseAffichee;
        
        // Panier vide
        if (cartItems.length === 0) {
            cartBody.innerHTML = `
                <tr>
                    <td colspan="3" class="text-center py-4 text-muted">
                        <i class="bi bi-cart-x" style="font-size: 2rem;"></i>
                        <p class="mt-2">Votre panier est vide</p>
                    </td>
                </tr>
            `;
        }
    }
    
    function updateQuantity(index, change) {
        const newQuantity = cartItems[index].quantity + change;
        if (newQuantity >= 1) {
            cartItems[index].quantity = newQuantity;
            updateCartDisplay();
        } else if (newQuantity === 0) {
            removeFromCart(index);
        }
    }
    
    function updateQuantityInput(index, input) {
        const newQuantity = parseInt(input.value);
        if (!isNaN(newQuantity) && newQuantity >= 1) {
            cartItems[index].quantity = newQuantity;
            updateCartDisplay();
        } else {
            input.value = cartItems[index].quantity;
        }
    }
    
    function removeFromCart(index) {
        cartItems.splice(index, 1);
        updateCartDisplay();
    }
    
    function appendToQuantity(value) {
        if (!activeInput) {
            activeInput = document.querySelector('.quantity-input');
            if (!activeInput) return;
        }
        
        const currentValue = activeInput.value;
        activeInput.value = currentValue === '0' ? value : currentValue + value;
        activeInput.dispatchEvent(new Event('change'));
    }
    
    function clearQuantity() {
        if (activeInput) {
            activeInput.value = '0';
            activeInput.dispatchEvent(new Event('change'));
        }
    }
    
    document.querySelector('form').addEventListener('submit', function(e) {
        if (cartItems.length === 0) {
            e.preventDefault();
            alert("Ajoutez au moins un produit avant de valider la vente.");
        }
    });
    
    function changeCurrency(currency) {
        fetch('{% url "change_currency" %}', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRFToken': '{{ csrf_token }}'
            },
            body: JSON.stringify({
                currency: currency
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                location.reload();
            }
        });
    }
    
    function playAddToCartSound() {
        const audio = new Audio('{% static "sounds/add-to-cart.mp3" %}');
        audio.play().catch(e => console.log("Le son n'a pas pu être joué:", e));
        document.querySelector('form').addEventListener('submit', function(e) {
            if (cartItems.length === 0) {
                e.preventDefault();
                alert("Ajoutez au moins un produit avant de valider la vente.");
            }
        });
        
    }
</script>
{% endblock %}