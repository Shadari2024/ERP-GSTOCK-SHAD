# Generated by Django 5.1.2 on 2025-05-22 00:39

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Devise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, unique=True, verbose_name='Code ISO')),
                ('nom', models.CharField(max_length=50, verbose_name='Nom')),
                ('symbole', models.CharField(max_length=5, verbose_name='Symbole')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('taux_par_defaut', models.DecimalField(decimal_places=6, default=1.0, max_digits=12, verbose_name='taux_par_defaut')),
                ('symbole_avant', models.BooleanField(default=False, verbose_name='Symbole avant montant')),
                ('decimales', models.PositiveIntegerField(default=2, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)], verbose_name='Nombre de décimales')),
            ],
            options={
                'verbose_name': 'Devise',
                'verbose_name_plural': 'Devises',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Entreprise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('slogan', models.CharField(blank=True, max_length=255, null=True, verbose_name='Slogan')),
                ('adresse', models.TextField(blank=True, null=True, verbose_name='Adresse')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('site_web', models.URLField(blank=True, null=True, verbose_name='Site web')),
                ('domaine', models.CharField(max_length=255, unique=True, verbose_name='Domaine')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/', verbose_name='Logo')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('numero_fiscal', models.CharField(blank=True, max_length=50, null=True)),
                ('date_debut_abonnement', models.DateField(blank=True, null=True, verbose_name='Date début abonnement')),
                ('date_fin_abonnement', models.DateField(blank=True, null=True, verbose_name='Date fin abonnement')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Slug')),
                ('statut', models.CharField(choices=[('AC', 'Active'), ('ES', "Période d'essai"), ('SU', 'Suspendue'), ('AR', 'Archivée')], default='ES', max_length=2, verbose_name='Statut')),
            ],
            options={
                'verbose_name': 'Entreprise',
                'verbose_name_plural': 'Entreprises',
            },
        ),
        migrations.CreateModel(
            name='PlanTarification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, verbose_name='Nom du plan')),
                ('niveau', models.CharField(choices=[('ST', 'Starter'), ('PRO', 'Professional'), ('ENT', 'Enterprise'), ('CUS', 'Custom')], default='ST', max_length=3, verbose_name='Niveau')),
                ('prix_mensuel', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix mensuel')),
                ('utilisateurs_inclus', models.PositiveIntegerField(verbose_name='Utilisateurs inclus')),
                ('stockage_go', models.PositiveIntegerField(verbose_name='Stockage inclus (Go)')),
                ('modules_inclus', models.JSONField(default=list, verbose_name='Modules inclus')),
                ('limites', models.JSONField(default=dict, verbose_name="Limites d'usage")),
                ('support_24h', models.BooleanField(default=False, verbose_name='Support 24/7')),
                ('api_acces', models.BooleanField(default=False, verbose_name='Accès API')),
                ('rapports_avances', models.BooleanField(default=False, verbose_name='Rapports avancés')),
            ],
            options={
                'verbose_name': 'Plan de tarification',
                'verbose_name_plural': 'Plans de tarification',
                'ordering': ['prix_mensuel'],
            },
        ),
        migrations.CreateModel(
            name='ConfigurationSAAS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modules_actifs', models.JSONField(default=list, verbose_name='Modules activés')),
                ('fuseau_horaire', models.CharField(default='UTC', max_length=50, verbose_name='Fuseau horaire')),
                ('langue', models.CharField(default='fr', max_length=10, verbose_name='Langue')),
                ('expiration_session', models.PositiveIntegerField(default=30, validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(1440)], verbose_name='Expiration session (minutes)')),
                ('complexite_mdp', models.IntegerField(choices=[(1, 'Faible'), (2, 'Moyen'), (3, 'Fort')], default=2, verbose_name='Complexité mot de passe')),
                ('devise_principale', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='parametres.devise', verbose_name='Devise principale')),
                ('entreprise', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='config_saas', to='parametres.entreprise', verbose_name='Entreprise')),
            ],
            options={
                'verbose_name': 'Configuration SAAS',
                'verbose_name_plural': 'Configurations SAAS',
            },
        ),
        migrations.AddField(
            model_name='entreprise',
            name='plan_tarification',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='parametres.plantarification', verbose_name='Plan tarification'),
        ),
        migrations.CreateModel(
            name='Abonnement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateTimeField(verbose_name='Date début')),
                ('date_fin', models.DateTimeField(blank=True, null=True, verbose_name='Date fin')),
                ('prochain_paiement', models.DateTimeField(blank=True, null=True, verbose_name='Prochain paiement')),
                ('methode_paiement', models.CharField(blank=True, choices=[('STRIPE', 'Stripe'), ('PAYPAL', 'PayPal'), ('BANK', 'Virement bancaire')], max_length=10, verbose_name='Méthode de paiement')),
                ('id_abonnement_paiement', models.CharField(blank=True, max_length=100, verbose_name='ID abonnement fournisseur')),
                ('entreprise', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='abonnement', to='parametres.entreprise', verbose_name='Entreprise')),
                ('plan_actuel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parametres.plantarification', verbose_name='Plan actuel')),
            ],
            options={
                'verbose_name': 'Abonnement',
                'verbose_name_plural': 'Abonnements',
            },
        ),
        migrations.CreateModel(
            name='TauxChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taux', models.DecimalField(decimal_places=6, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Taux')),
                ('date_application', models.DateField(verbose_name="Date d'application")),
                ('source', models.CharField(choices=[('API', 'API'), ('MAN', 'Manuel'), ('BANK', 'Banque centrale')], default='API', max_length=10, verbose_name='Source')),
                ('est_actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('devise_cible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taux_cibles', to='parametres.devise', verbose_name='Devise cible')),
                ('devise_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taux_sources', to='parametres.devise', verbose_name='Devise source')),
            ],
            options={
                'verbose_name': 'Taux de change',
                'verbose_name_plural': 'Taux de change',
                'ordering': ['-date_application'],
            },
        ),
        migrations.CreateModel(
            name='AuditConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=50, verbose_name='Action')),
                ('modele', models.CharField(max_length=50, verbose_name='Modèle affecté')),
                ('ancienne_valeur', models.JSONField(null=True, verbose_name='Ancienne valeur')),
                ('nouvelle_valeur', models.JSONField(null=True, verbose_name='Nouvelle valeur')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Horodatage')),
                ('utilisateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
                ('entreprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametres.entreprise', verbose_name='Entreprise')),
            ],
            options={
                'verbose_name': 'Audit configuration',
                'verbose_name_plural': 'Audits configurations',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['entreprise', 'timestamp'], name='parametres__entrepr_58a6cb_idx')],
            },
        ),
        migrations.CreateModel(
            name='ParametreDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_document', models.CharField(choices=[('FACTURE', 'Facture'), ('DEVIS', 'Devis'), ('BON_LIV', 'Bon de livraison'), ('CMD', 'Commande')], max_length=10, verbose_name='Type de document')),
                ('prefixe', models.CharField(max_length=10, verbose_name='Préfixe')),
                ('suffixe', models.CharField(blank=True, max_length=10, verbose_name='Suffixe')),
                ('compteur', models.PositiveIntegerField(default=1, verbose_name='Compteur actuel')),
                ('format_compteur', models.CharField(default='0000', max_length=10, verbose_name='Format compteur')),
                ('reinitialisation', models.CharField(choices=[('NEVER', 'Jamais'), ('YEARLY', 'Annuelle'), ('MONTHLY', 'Mensuelle')], default='NEVER', max_length=10, verbose_name='Réinitialisation')),
                ('entreprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parametres_docs', to='parametres.entreprise', verbose_name='Entreprise')),
            ],
            options={
                'verbose_name': 'Paramètre document',
                'verbose_name_plural': 'Paramètres documents',
                'unique_together': {('entreprise', 'type_document')},
            },
        ),
        migrations.AddIndex(
            model_name='entreprise',
            index=models.Index(fields=['slug'], name='parametres__slug_6262b9_idx'),
        ),
        migrations.AddIndex(
            model_name='entreprise',
            index=models.Index(fields=['statut'], name='parametres__statut_2dedd8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='tauxchange',
            unique_together={('devise_source', 'devise_cible', 'date_application')},
        ),
    ]
